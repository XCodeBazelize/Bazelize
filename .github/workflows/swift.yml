name: Swift

on: 
  push:
    branches: 
      - master
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'
  pull_request:
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'

concurrency: 
  group: ci
  cancel-in-progress: true

jobs:
  lint:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3.3.0

      - name: swiftformat installation
        run: |
          brew install swiftformat

      - name: swiftformat --lint
        run: |
          swiftformat --lint --config .swiftformat .
  build:

    # https://github.com/actions/virtual-environments
    # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-11-Readme.md
    runs-on: macos-12

    strategy:
      matrix:
        xcode:
        - "14.2"
        - "14.1"
        - "14.0.1"
        - "13.4.1"
        - "13.4"
        - "13.3.1"

    steps:
    - uses: actions/checkout@v3.3.0

    - name: Check Cocoapod Version
      run: pod --version

    - name: Check Cocoapod Path
      run: which pod

    - name: Update Cocoapod Repo
      run: pod repo update

    # - name: Get Pod Spec
    #   run: pod spec cat --regex Bagel --version=1.4.0

    - name: Xcode Select ${{ matrix.xcode }}
      run: |
        echo "Available Xcode versions:"
        ls /Applications | grep Xcode
        echo "Choosing Xcode_${{ matrix.xcode }}.app"
        sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
        xcodebuild -version
        swift --version
        swift package --version

    - name: Get swift version
      run: swift --version # Swift 5.3.3

    - name: SPM Cache ${{ matrix.xcode }}
      uses: actions/cache@v3.2.4
      with:
        path: .build
        key: ${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.xcode }}-spm-

    - name: Build ${{ matrix.xcode }}
      run: make build

    - name: Run tests ${{ matrix.xcode }}
      run: make test

  artifact:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3.3.0

      - name: SPM Cache
        uses: actions/cache@v3.2.4
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build Bazelize
        run: swift build -c release --arch arm64 --arch x86_64

      - name: Upload Bazelize
        uses: actions/upload-artifact@v3
        with:
          name: bazelize
          path: .build/apple/Products/Release/bazelize
          if-no-files-found: ignore # 'warn' or 'ignore' 

  IntegrateIOS:
    runs-on: macos-12
    needs: [artifact]
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Bazel iOS Cache
        uses: actions/cache@v3.2.4
        with:
          path: fixture/iOS/cache
          key: ${{ runner.os }}-IntegrateIOS-fixture-ios-${{ hashFiles('**/fixture/iOS/WORKSPACE') }}
          restore-keys: |
            ${{ runner.os }}-IntegrateIOS-fixture-ios-

      - name: Install `bazelisk`
        run: |
          brew install bazelisk

      - name: Download Bazelize
        uses: actions/download-artifact@v3
        with:
          name: bazelize

      - name: Check
        run: |
          ls -l
          pwd
          chmod +x bazelize

      - name: Bazel Generation
        run: |
          ./bazelize --project fixture/iOS/Example.xcodeproj

      - name: Update SPM Deps
        working-directory: fixture/iOS
        run: |
          bazel run //:swift_update_pkgs

      - name: Build Application
        working-directory: fixture/iOS
        run: |
          bazel build Example
          cp bazel-bin/Example/Example.ipa .

      - name: Unit Test
        working-directory: fixture/iOS
        run: |
          bazel test ExampleTests Framework1Tests Framework2Tests Framework3Tests

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: iOS_Example.ipa
          path: fixture/iOS/Example.ipa
          if-no-files-found: ignore # 'warn' or 'ignore' 
 
