name: Swift

on: 
  push:
    branches: 
      - master
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'
  pull_request:
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'

concurrency: 
  group: ci
  cancel-in-progress: true

jobs:
  lint:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3.3.0

      - name: swiftformat installation
        run: |
          brew install swiftformat

      - name: swiftformat --lint
        run: |
          swiftformat --lint --config .swiftformat .
  build:

    # https://github.com/actions/virtual-environments
    # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-11-Readme.md
    runs-on: macos-12

    strategy:
      matrix:
        xcode:
        - "14.2"
        - "14.1"
        - "14.0.1"
        - "13.4.1"
        - "13.4"
        - "13.3.1"

    steps:
    - uses: actions/checkout@v3.3.0

    - name: Check Cocoapod Version
      run: pod --version

    - name: Check Cocoapod Path
      run: which pod

    - name: Update Cocoapod Repo
      run: pod repo update
    
    # - name: Get Pod Spec
    #   run: pod spec cat --regex Bagel --version=1.4.0

    - name: Xcode Select ${{ matrix.xcode }}
      # You may pin to the exact commit or the version.
      # uses: devbotsxyz/xcode-select@05f94658217eb8575f0aabd3b95e702a47995d21
      uses: devbotsxyz/xcode-select@v1.1.0
      with:
        # Version to use (like '11.7', '12' or simply 'latest')
        version: ${{ matrix.xcode }} # optional, default is latest
        # Whether to select a beta release or not. Beta releases may not always be available.
        beta: false # optional, default is false

    - name: Get swift version
      run: swift --version # Swift 5.3.3

    - name: SPM Cache ${{ matrix.xcode }}
      uses: actions/cache@v3.2.4
      with:
        path: .build
        key: ${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.xcode }}-spm-
      
    - name: Build ${{ matrix.xcode }}
      run: make build
      
    - name: Run tests ${{ matrix.xcode }}
      run: make test

  IntegrateIOS:
    runs-on: macos-12
    needs: [lint, build]
    steps:
      - uses: actions/checkout@v3.3.0

      - name: SPM Cache ${{ matrix.xcode }}
        uses: actions/cache@v3.2.4
        with:
          path: .build
          key: ${{ runner.os }}-IntegrateIOS-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-IntegrateIOS-spm-

      - name: Build Bazelize
        run: swift build -c release

      - name: Install `bazelisk`
        run: |
          brew install bazelisk
      
      - name: Bazel Generation
        run: |
          cd fixture/iOS
          ../../.build/release/bazelize --project Example.xcodeproj

      - name: Update SPM Deps
        run: |
          cd fixture/iOS
          bazel run //:swift_update_pkgs

      - name: Build Application
        run: |
          cd fixture/iOS
          bazel build Example

      - name: Unit Test
        run: |
          cd fixture/iOS
          bazel test ExampleTests Framework1Tests Framework2Tests Framework3Tests
